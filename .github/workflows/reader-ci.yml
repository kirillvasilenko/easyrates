name: reader-ci

on:
  push:
    paths:
      - "src/Model/**"
      - "src/Reader/**"
      - ".github/workflows/reader-ci.yml"

env:
  SERVICE_FOLDER: src/Reader/EasyRates.ReaderApp.AspNet
  SERVICE_NAME: easyrate-reader
  VERSION_TAG_PREFIX: reader/

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*
        git fetch --prune --unshallow
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.102
    - name: Build
      run: dotnet build --configuration Release src/EasyRates.sln
    - name: Publish local
      run: |
        dotnet publish --no-build --configuration Release src/Reader/EasyRates.ReaderApp.AspNet
        dotnet publish --no-build --configuration Release src/Reader/EasyRates.Reader.Tests
        dotnet publish --no-build --configuration Release src/Model/EasyRates.Model.Tests
    - name: Prepare artifacts
      run: |
        mkdir -p artifacts/reader
        mkdir -p artifacts/tests/reader
        mkdir -p artifacts/tests/model
        cp -r src/Reader/EasyRates.ReaderApp.AspNet/bin artifacts/reader
        cp src/Reader/EasyRates.ReaderApp.AspNet/Dockerfile artifacts/reader
        cp -r src/Reader/EasyRates.Reader.Tests/bin/Release/netcoreapp3.1/publish/* artifacts/tests/reader
        cp -r src/Model/EasyRates.Model.Tests/bin/Release/netcoreapp3.1/publish/* artifacts/tests/model
    - name: Extract service version
      run: |
        SVC_VERSION=$(git describe --match "$VERSION_TAG_PREFIX*" --abbrev=0)
        SVC_VERSION=$(echo $SVC_VERSION | cut -d'/' -f 2)
        SVC_VERSION="$SVC_VERSION.$GITHUB_RUN_NUMBER"
        echo "SVC_VERSION=$SVC_VERSION" >> artifacts/reader/version.txt
    - name: Upload tests
      uses: actions/upload-artifact@v1
      with:
        name: tests
        path: artifacts/tests
    - name: Upload service
      uses: actions/upload-artifact@v1
      with:
        name: reader
        path: artifacts/reader
  
  test:
    needs: build
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.102
    - name: Download tests
      uses: actions/download-artifact@v1
      with:
        name: tests
    - name: Tests
      run: |
        dotnet test tests/model/EasyRates.Model.Tests.dll
        dotnet test tests/reader/EasyRates.Reader.Tests.dll
  
  publish:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v1
      with:
        name: reader
    - name: Read version
      run: |
        source reader/version.txt
        echo $SVC_VERSION
        echo "::set-env name=SVC_VERSION::$SVC_VERSION"
    - name: build docker image
      run: docker build  -t "${SERVICE_NAME}" -f "reader/Dockerfile" "reader"
    - name: login in docker.pkg.github.com
      run: docker login -u ${GITHUB_ACTOR} -p ${{secrets.GITHUB_TOKEN}} docker.pkg.github.com
    - name: tag docker images
      run: |
        docker tag "${SERVICE_NAME}" docker.pkg.github.com/${GITHUB_REPOSITORY,,}/${SERVICE_NAME}:latest
        docker tag "${SERVICE_NAME}" docker.pkg.github.com/${GITHUB_REPOSITORY,,}/${SERVICE_NAME}:$SVC_VERSION
    - name: publish to docker.pkg.github.com
      run: |
        docker push docker.pkg.github.com/${GITHUB_REPOSITORY,,}/${SERVICE_NAME}:latest
        docker push docker.pkg.github.com/${GITHUB_REPOSITORY,,}/${SERVICE_NAME}:$SVC_VERSION
